components library that we will be using is:
shadcn/ui
https://ui.shadcn.com/ (built on top of Radix Ui)
{since we are using next.js -> https://ui.shadcn.com/docs/installation/next}

we can create new layouts only for a specific route root:
inside the (root) folder, we create layout.tsx, which would be similar to the last one (used for the app folder), so we export the same code. 

shared folder is created, that stores the header and footer which would be used in various pages of the site, hence shared.

for authentication of the user, we will be using clerk:
https://clerk.com/docs/quickstarts/nextjs (follow the steps here)

after this we setup the login button linking it with clerk using the SignedOut from clerk/nextjs, that we added in the Header.js

now we add app -> (auth) -> sign-in -> [[...sign-in]] -> page.tsx, where we add SignIn component from clerk/nextjs (same for the sign-up), these will be used to create custom signin signup pages:
https://clerk.com/docs/references/nextjs/custom-signup-signin-pages

now to give our own styling using classname="" to the custom sign-in and sign-up pages we can create layout.tsx under (auth) folder with code:

  const Layout = ({ children }: { children: React.ReactNode }) => {
  return (
    <div classname='{the styling goes here}'>
      {children}
    </div>
  )
}

next, clerk also allows us to enter username, after that we test a user login or signup

after login the LoginButton is auto hidden by the <SignedOut> component of clerk in Header, reffering to as the user has now logged in to the website and hence no login required

once login is done, we want to display the icon of the loggedin user in the Header and also the menu to change or log out the user, this is done by adding the:
<SignedIn>
  <UserButton afterSignOutUrl='/'>
<SignedIn/> 
all from the clerk/nextjs 

creating navitems menu for laptop devices: (NavItems, will go in shared folder)
and (MobileNav, for mobile devices)
for each we wrap them in the SignIn component of clerk, as code updated in Header.tsx

for MobileNav: using shadcn component -> Sheet 
  npx shadcn-ui@latest add sheet
  doc to follow : https://ui.shadcn.com/docs/components/sheet 

now we add the image for the MobileNav, replacing the text Open with Image component from nextjs

fixing/styling the bg and color of the side menu in SheetContent, add Separator component from shadcn : npx shadcn-ui@latest add separator

actually adding the navitems to be displayed in both device orientations:
create a folder on root directory : constants (that always remain the same)

fetching the code for index.ts from the repo and updating the NavItems.tsx

and styling the active path of nav item, using the 'use client' -> pathname hook from nextjs/navigation 

now we impliment the home page (i.e the page.tsx in (root) folder, under app folder)






